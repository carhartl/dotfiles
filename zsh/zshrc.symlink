# Shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles
export PATH="./bin:/usr/local/bin:/usr/local/sbin:$ZSH/bin:$PATH"

# Your project folder that we can `c [tab]` to
export PROJECTS=~/Workspace

export EDITOR="mate -w"

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]; then
  source ~/.localrc
fi

# All of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# Load the path files first
for file in ${(M)config_files:#*/path.zsh}; do
  source $file
done

# Load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source $file
done

# Initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# Load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source $file
done

unset config_files

# Quote pasted URLs
autoload -U url-quote-magic
zle -N self-insert url-quote-magic

# Fun
autoload -U tetris
zle -N tetris
bindkey ^T tetris

# Make colors available for prompt
autoload colors && colors

# Setup prompt
export PROMPT=%n@%m:'%{$fg[cyan]%}${PWD/$HOME/~}%{$reset_color%}'"\$(git-radar --zsh --fetch)"$'\n'\$' '

precmd() {
  # Sets the Terminal.app current working directory before the prompt is
  # displayed (for when opening a new tab).
  printf '\e]7;%s\a' "file://${HOST}${PWD// /%20}"
}

preexec() {
  # Unsets the Terminal.app current working directory when a terminal
  # multiplexer or remote connection is started since it can no longer be
  # updated, and it becomes confusing when the directory displayed in the title
  # bar is no longer synchronized with real current working directory.
  if [[ "${2[(w)1]:t}" == (screen|tmux|dvtm|ssh|mosh) ]]; then
    print '\e]7;\a'
  fi
}
