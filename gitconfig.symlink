[include]
	path = ~/.gituser
[user]
	name = Klaus Hartl
[mergetool]
	keepBackup = true
[credential]
	helper = osxkeychain
[branch]
	autosetuprebase = always
[core]
	excludesfile = ~/.gitignore
	editor = mate -w
	precomposeunicode = false
[color]
	ui = auto
[alias]
	s = status
	c = commit
	cm = commit -m
	a = add
	aa = !git add -A && git status
	d = diff
	dc = diff --cached
	ch = checkout
	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"
	go = checkout -B
	b = branch
	up = !git fetch origin && git rebase origin/master
	fixup = !sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -
	squash = !sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -
	ri = rebase --interactive --autosquash
	rim = rebase --interactive origin/master
	done = !git fetch && git rebase origin/master && git checkout master && git merge @{-1} && rake && git push
	amend = commit --amend
	fix = commit --amend -C HEAD
	credit = commit --amend --author "$1 <$2>" -C HEAD
	count = !git shortlog -sn
	latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short)'
	cleanup = remote prune origin
	comp = !sh -c 'git log $1..$2 --pretty=oneline' -
	pop = reset --hard HEAD~1
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
	ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	workprofile = config user.email \"kh@waymate.de\"
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	today = log --since '1 day ago' --oneline --author Klaus
	# Show verbose output about tags, branches, remotes or stashes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	stashes = stash list
[diff]
	external = ~/.dotfiles/bin/git-diff
[push]
	default = simple
[rerere]
	enabled = 1